name: Node.js push on develop branch

on:
  pull_request:
    branches: [ develop ]

jobs:
  build:
    # The virtual machine that will be used on GitHub
    runs-on: ubuntu-18.04

    # Run the steps in a Docker container on the virtual machine
    container:
      image: node:12.16.2
    steps:
      # Checkout Git repository
      - uses: actions/checkout@v2

      # Install the dependencies needed for the project
      - name: Install dependencies
        run: npm ci

      # Build the project
      - name: Build
        run: npm run build --if-present
        env:
          CI: false

      # Test the project
      - name: Test
        run: npm test --passWithNoTests
        env:
          CI: false

      # Upload the release folder and Dockerfile artifacts to this GitHub workflow for use in the next job
      - name: Upload release artifact
        uses: actions/upload-artifact@v1
        with:
          name: release-artifact
          path: ./build

      - name: Upload Dockerfile artifact
        uses: actions/upload-artifact@v1
        with:
          name: dockerfile-artifact
          path: ./Dockerfile

      - name: Upload nginx config artifact
        uses: actions/upload-artifact@v1
        with:
          name: nginx-artifact
          path: ./nginx.conf

      - name: Upload Kubernetes artifact
        uses: actions/upload-artifact@v1
        with:
          name: kubernetes-artifact
          path: ./kube_develop

  delivery:
    needs: build
    runs-on: ubuntu-18.04
    steps:
      # Download artifacts from GitHub workflow to use in this job
      - name: Download release artifact
        uses: actions/download-artifact@v1
        with:
          name: release-artifact
          path: ./build
      - name: Download Dockerfile artifact
        uses: actions/download-artifact@v1
        with:
          name: dockerfile-artifact
          path: .

      # Deliver Docker image to DockerHub
      - name: Deliver Docker image
        env:
          CONTAINER_IMAGE: ${{ secrets.DOCKER_ORGANIZATION }}/${{ secrets.REPOSITORY_NAME }}:${{ github.sha }}
          CONTAINER_IMAGE_LATEST: ${{ secrets.DOCKER_ORGANIZATION }}/${{ secrets.REPOSITORY_NAME }}:develop
        run: |
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }}
          docker build -t $CONTAINER_IMAGE -t $CONTAINER_IMAGE_LATEST .
          docker push $CONTAINER_IMAGE
          docker push $CONTAINER_IMAGE_LATEST

  deploy:
    needs: delivery
    runs-on: ubuntu-18.04
    steps:
      - name: Download Kubernetes artifact
        uses: actions/download-artifact@v1
        with:
          name: kubernetes-artifact
          path: ./kube_develop

      - name: Setup Kubectl
        uses: azure/setup-kubectl@v1

      - name: Set context via kubeconfig
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - uses: Azure/k8s-deploy@v1
        with:
          namespace: kwetter-staging
          manifests: |
            ./kube_develop/deployment.yaml
            ./kube_develop/ingress.yaml
            ./kube_develop/service.yaml
          images: |
            ${{ secrets.DOCKER_USER }}/${{ secrets.REPOSITORY_NAME }}:${{ github.sha }}